{"version":3,"sources":["Header.js","Login.js","Home.js","Request.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","id","Login","src","width","height","alt","type","placeholder","Home","class","Request","method","name","for","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4c44ac7b.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Header.css\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction Header() {\r\n    return <nav className=\"header\">\r\n        <html>\r\n        <body>\r\n   <div className=\"header_nav\">    \r\n       <Link to=\"/\" className=\"header_link1\">\r\n        <div className=\"header_option\">\r\n       <span id=\"active\">Home</span>\r\n       </div>\r\n       </Link>\r\n       <Link to=\"/\" className=\"header_link\">\r\n        <div className=\"header_option\">\r\n       <span>About</span>\r\n       </div>\r\n       </Link>\r\n       <Link to=\"/\" className=\"header_link\">\r\n        <div className=\"header_option\">\r\n       <span>Contact</span>\r\n       </div>\r\n       </Link>\r\n       <Link to=\"/\" className=\"header_link\">\r\n        <div className=\"header_option\">\r\n       <span>Account</span>\r\n       </div>\r\n       </Link>\r\n       <Link to=\"/checkout\" className=\"header_link\">\r\n        <div className=\"header_option\">\r\n       <span>Requested Things</span>\r\n       </div>\r\n       </Link>\r\n       <Link to=\"/login\" className=\"header_link\">\r\n        <div className=\"header_option\">\r\n       <span>Sign In</span>\r\n       </div> \r\n       </Link>\r\n   </div> \r\n   </body>\r\n   </html>\r\n    </nav>\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport './Login.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\nreturn ( \r\n    <div className=\"login\">\r\n       <Link to=\"/\">\r\n          <img className=\"login_logo\" src=\"logo1.png\" width=\"140\" height=\"140\" alt=\"logo1\" />\r\n       </Link>\r\n       <div className=\"login_container\">\r\n           <h1>Sign In</h1>\r\n           <form>\r\n               <h5>E-mail</h5>\r\n               <input type=\"email\" placeholder=\"E-mail\"/>\r\n               <h5>Password</h5>\r\n               <input type=\"password\" placeholder=\"Password\"/>\r\n               <button className=\"login_signInButton\">Sign In</button>\r\n           <p>By signing-in you agree to Getit! Conditions of use & Delivery</p>\r\n           <button className=\"login_registerButton\">Create your Getit! Account</button>\r\n           </form>\r\n       </div>\r\n    </div>\r\n);\r\n}\r\nexport default Login;","import React from 'react';\r\nimport './Home.css';\r\nimport { Link } from \"react-router-dom\";\r\nfunction Home() {\r\nreturn (\r\n<div class=\"logo-intro\">\r\n<div class=\"left1\">\r\n         <img class=\"logo\" src=\"logo1.png\" width=\"190\" height=\"190\" alt=\"logo\"></img>\r\n         <div class=\"intro\">\r\n         <h2>Hi, Welcome to Getit!</h2> \r\n         <h3>Forgot Something?</h3>\r\n         <h4>Don't Worry get it within no time</h4>   \r\n         <div class=\"del\">\r\n             <img src=\"fast1.png\" width=\"250\" height=\"250\" alt=\"fast-delivery\" ></img>\r\n         </div>\r\n         </div>\r\n         </div>\r\n         <h3>Track your Requested Thing's any time Anywhere Just do Getit! </h3>\r\n<div class=\"right1\">\r\n<Link to=\"/login\">\r\n<button className=\"createA\">Create Account ></button>\r\n </Link>\r\n\r\n<img src=\"LogoR.png\" width=\"390\" height=\"390\" alt=\"logo\"></img>\r\n    </div>         \r\n         \r\n</div> \r\n);\r\n}\r\nexport default Home; ","import React from 'react';\r\nimport './Request.css'\r\nimport { Link } from \"react-router-dom\";\r\nfunction Request()  {\r\n   return (\r\n      <div className=\"Request-container\">\r\n          <Link to=\"/\">\r\n          <img className=\"login_logo\" src=\"logo1.png\" width=\"140\" height=\"140\" alt=\"logo1\" />\r\n       </Link>\r\n       <form className=\"request-things\" method=\"post\">\r\n       <div class=\"request-box\">\r\n<h1>Request for your things</h1>\r\n<br />\r\n<input type=\"text\" placeholder=\"Your Name\" />\r\n<br />\r\n<input type=\"text\" placeholder=\"Pickup Address\" />\r\n<br />\r\n<input type=\"text\" placeholder=\"Sender's Phone Number\" />\r\n<br />\r\n<h3>Select size of items</h3>\r\n<br />\r\n<div class=\"radio-group\">\r\n<input type=\"radio\" id=\"option-one\" name=\"selector\" />\r\n<label for=\"option-one\">Mini</label>\r\n<input type=\"radio\" id=\"option-two\" name=\"selector\" />\r\n    <label for=\"option-two\">Medium</label>\r\n <input type=\"radio\" id=\"option-three\" name=\"selector\" />\r\n    <label for=\"option-three\">Large</label>\r\n </div>\r\n </div>\r\n </form>\r\n\r\n<form className=\"receiver-things\" method=\"post\">\r\n<div className=\"receiver-box\">\r\n<h1>Receiver's address</h1>\r\n<br />\r\n<input type=\"text\" placeholder=\"Receiver's Name\" />\r\n<br />\r\n<input type=\"text\" placeholder=\"Drop Address\" />\r\n<br />\r\n<input type=\"text\" placeholder=\"Recevier's Phone Number\" />\r\n<br />\r\n<button className=\"submit\">Submit</button>\r\n</div>\r\n</form>\r\n</div> \r\n      \r\n   );\r\n}\r\nexport default Request;","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Login from \"./Login\";\nimport Home from \"./Home\";\nimport Request from \"./Request\";\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"app\">\n      <Switch>\n      <Route path=\"/login\">\n        <Header />\n        <Login />\n      </Route>\n      <Route path=\"/checkout\">\n        <Header />\n        <Request />\n      </Route>\n      <Route path=\"/\">\n       <Header />\n       <Home />\n       \n      </Route>\n    </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}